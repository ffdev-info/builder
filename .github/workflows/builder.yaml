name: Builder
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - run: echo "CONTAINER=$(find container* -type f -printf "%f")" >> $GITHUB_ENV
      - run: echo ${{ env.CONTAINER }}
      - run: export DROID=$(find DROID* -type f -printf "%f")
      - run: export JYTHON_URL='http://search.maven.org/remotecontent?filepath=org/python/jython-installer/2.7.0/jython-installer-2.7.0.jar'
      - run: wget $JYTHON_URL -O jython_installer.jar; java -jar jython_installer.jar -s -d $HOME/jython; export PATH=$HOME/jython/bin:$PATH
      - run: export POI='3.17'
      - run: export POI_URL="https://archive.apache.org/dist/poi/release/bin/poi-bin-3.17-20170915.tar.gz"
      - run: wget $POI_URL -O poi.tar.gz; tar -xvf poi.tar.gz
      - run: export CLASSPATH=$GITHUB_WORKSPACEpoi-$POI/poi-$POI.jar
      - run: wget -qO - https://bintray.com/user/downloadSubjectPublicKey?username=bintray | sudo apt-key add -
      - run: echo "deb http://dl.bintray.com/siegfried/debian wheezy main" | sudo tee -a /etc/apt/sources.list
      - run: sudo apt-get update && sudo apt-get install siegfried
      - run: git clone https://github.com/exponential-decay/skeleton-test-suite-generator.git $HOME/skeleton-test-suite-generator
      - run: git clone https://github.com/exponential-decay/skeleton-container-test-suite-generator.git $HOME/skeleton-container-test-suite-generator
      - run: roy harvest -home .
      - run: mkdir -p $HOME/output/skeleton-suite/containers
      - run: cp $GITHUB_WORKSPACE/$CONTAINER $HOME/output/
      - run: cp $GITHUB_WORKSPACE/$DROID $HOME/output/
      - run: cp -rf pronom $HOME/output/
      - run: mkdir -p $HOME/skeleton-test-suite-generator/pronom-export/{fmt,x-fmt}
      - run: cp pronom/fmt* $HOME/skeleton-test-suite-generator/pronom-export/fmt/
      - run: cp pronom/x-fmt* $HOME/skeleton-test-suite-generator/pronom-export/x-fmt/
      - run: cd $HOME/skeleton-test-suite-generator
      - run: python skeletongenerator.py
      - run: cd skeleton-suite
      - run: cp -rf fmt $HOME/output/skeleton-suite/
      - run: cp -rf x-fmt $HOME/output/skeleton-suite/
      - run: cd $HOME/skeleton-container-test-suite-generator
      - run: jython -Dpython.path=$CLASSPATH skeletoncontainergenerator.py --con $TRAVIS_BUILD_DIR/$CONTAINER --sig $TRAVIS_BUILD_DIR/$DROID
      - run: cp skeleton-container-suite/zip/* $HOME/output/skeleton-suite/containers/
      - run: cp skeleton-container-suite/ole2/* $HOME/output/skeleton-suite/containers/
      - run: cd $HOME/output
      - run: zip -r $HOME/pronom.zip . 